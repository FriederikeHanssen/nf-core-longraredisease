/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    // publishDir = [
    //     path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
    //     mode: params.publish_dir_mode,
    //     saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    // ]

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SAMTOOLS_FASTQ' {
        ext.args = '-T MM,ML,mv --threads 4'
        cpus = 4  // Keep this for resource allocation
        publishDir = [ 
            pattern: '*_other.fastq.gz',
            mode: 'copy',
            path: { "${params.outdir}/fastq" }
        ]
    }

    // withName: 'SAMTOOLS_MERGE' {
    //     ext.args = [
    //         '--threads 4',
    //         '--write-index',     // Create index for output
    //         '--level 6'          // Compression level
    //     ].join(' ')
        
    //     publishDir = [
    //         path: { "${params.outdir}/merged_bams" },
    //         mode: 'copy'
    //     ]
    // }


    withName: 'SAMTOOLS_MERGE' {
        ext.args = '--threads 4'
        cpus = 4  // Keep this for resource allocation
    }

    withName: 'SAMTOOLS_INDEX' {
        ext.args = '--threads 4'
        cpus = 4  // Keep this for resource allocation
    }


    withName: 'MINIMAP2_ALIGN' {
        ext.args = { "-ax lr:hq -y -R \"@RG\\tID:ont_sample\\tSM:${meta.id}\"" }
        cpus = 8
        publishDir = [
            path: { "${params.outdir}/minimap2" },
            mode: 'copy'
        ]
    }


    withName: MOSDEPTH {
        ext.args = '--fast-mode --by 1000'
        publishDir = [
            path: { "${params.outdir}/mosdepth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SVIM' {
        ext.prefix = { "${meta.id}_svim" }
        ext.args = [
            '--min_mapq 10',
            '--min_sv_size 50',
            '--max_sv_size 1000000',
            '--insertion_sequences',
            '--types DEL,INS,INV,DUP',
            '--tandem_duplications_as_insertions',
            '--interspersed_duplications_as_insertions'
            ].join(' ')
        publishDir = [
            path: { "${params.outdir}/svim" },
            mode: 'copy',
            pattern: '*.vcf'
        ]
    }
    
    // withName: 'TABIX_TABIX_SVIM' {
    //     // ext.args = '-f'
    //     publishDir = [
    //         path: { "${params.outdir}/svim" },
    //         mode: 'move'
    //     ]
    // }

    withName: 'BCFTOOLS_SORT_SVIM' {
        ext.prefix = { "${meta.id}_sorted_svim" }
        publishDir = [
            path: { "${params.outdir}/svim" },
            mode: 'move',
            pattern: '*.{gz,tbi}'
        ]
    }

    withName: 'CUTESV' {
        ext.prefix = { "${meta.id}_cutesv" }
        publishDir = [
            path: { "${params.outdir}/cutesv" },
            mode: 'copy',
            pattern: '*.vcf'
        ]
    }

    withName: 'TABIX_BGZIPTABIX_CUTESV' {
        ext.prefix = { "${meta.id}_cutesv" }
        publishDir = [
            path: { "${params.outdir}/cutesv" },
            mode: 'move',
            pattern: '*.{gz,tbi}'
        ]
    }





    withName: 'SNIFFLES' {
        ext.prefix = { "${meta.id}_sniffles" }
                publishDir = [
            path: { "${params.outdir}/sniffles" },
            mode: 'copy'
        ]
        
    }

    withName: 'GUNZIP_SNIFFLES' {
        publishDir = [
            path: { "${params.outdir}/sniffles" },
            mode: 'copy'
        ]
    }


    withName: 'SURVIVOR_MERGE' {
        cpus = 2
        memory = 4.GB
        publishDir = [
            path: { "${params.outdir}/survivor" },
            mode: 'copy' 
            ]
    }

        withName: 'TABIX_BGZIPTABIX_SURVIVOR' {
        ext.prefix = { "${meta.id}_survivor" }
        publishDir = [
            path: { "${params.outdir}/survivor" },
            mode: 'move',
            pattern: '*.{gz,tbi}'
        ]
    }

    // withName: 'SURVIVOR_FILTER' {
    // ext.prefix = { "${meta.id}_filtered" }
    // publishDir = [
    //     path: { "${params.outdir}/survivor_filter" },
    //     mode: 'copy',
    //     pattern: '*.vcf'
    // ]
    // }

    withName: 'CLAIR3' {
    // Resource allocation
    cpus = 4
    // memory = 64.GB
    // time = 12.h
    // Clair3 specific arguments for bacterial fine-tuned model
    // ext.args = [
    //     '--platform="ont"',
    //     '--model_path="/opt/models/r1041_e82_400bps_sup_v430_bacteria_finetuned"'
    // ].join(' ')
    ext.args = '--threads 4'
    ext.prefix = { "${meta.id}_clair3" }
    // Publish directory for Clair3 output
    publishDir = [
        path: { "${params.outdir}/clair3" },
        mode: 'copy'
        // pattern: '*.{vcf,vcf.gz}'
    ]
    }


    withName: 'DEEPVARIANT_RUNDEEPVARIANT'{
        ext.prefix = { "${meta.id}_deepvariant" }
        // cpus = 4
        // memory = 16.GB
        ext.args = '--model_type=ONT_R104 --vcf_stats_report=true --disable_small_model=true --logging_dir=${PWD}/logs --dry_run=false --regions=chr22'
        publishDir = [
            path: { "${params.outdir}/deepvariant" },
            mode: 'copy',
            pattern: '*.{vcf,vcf.gz,vcf.gz.tbi,g.vcf.gz,g.vcf.gz.tbi}'
        ]
    }

        withName: 'LONGPHASE_PHASE'{
        ext.prefix = { "${meta.id}_longphase" }
        // cpus = 4
        // memory = 16.GB
        ext.args = '--ont'
        publishDir = [
            path: { "${params.outdir}/longphase" },
            mode: 'copy'
        ]
    }


    withName: 'BCFTOOLS_CONCAT_SNV' {
        ext.prefix = { "${meta.id}_snv_concat" }
        ext.args = '--rm-dups all --write-index=tbi --allow-overlaps --threads 4'
        publishDir = [
            path: { "${params.outdir}/snv_combined" },
            mode: 'copy'
        ]
    }

    withName: RUNQDNASEQ {
        ext.prefix = { "${meta.id}_qdnaseq" }
        errorStrategy = 'retry'
        container = 'docker.io/nourmahfel1/runqdnaseq:0.0.4'
            publishDir = [
            path: { "${params.outdir}/runqdnaseq" },
            mode: 'copy'
        ]
    }

    withName: 'SPECTRE' {
        // ext.args =  '--bin-size 1000'
        ext.prefix = { "${meta.id}_spectre" }
        publishDir = [
            path: { "${params.outdir}/spectre" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

        container = 'community.wave.seqera.io/library/pip_ont-spectre:b4773971f0688241'
    }

    withName: 'TABIX_BGZIPTABIX_SPECTRE' {
        publishDir = [
            path: { "${params.outdir}/spectre" },
            mode: 'move',
            pattern: '*.{gz,tbi}'
        ]
    }

    withName: STRAGLR {
        ext.prefix = { "${meta.id}" }
            publishDir = [
            path: { "${params.outdir}/straglr" },
            mode: 'copy'
        ]
    }
    
}



