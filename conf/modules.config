/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'SAMTOOLS_FASTQ' {
        ext.args = '-T MM,ML,mv --threads 4'
        cpus = 4  // Keep this for resource allocation
        publishDir = [ 
            pattern: '*_other.fastq.gz',
            mode: 'copy',
            path: { "${params.outdir}/fastq_files" }
        ]
    }


    withName: 'SAMTOOLS_MERGE' {
        ext.args = '--threads 4'
        cpus = 4  // Keep this for resource allocation
        publishDir = [
            path: { "${params.outdir}/unmapped_bam" },
            mode: 'copy'
        ]
    }

    withName: 'SAMTOOLS_INDEX' {
        ext.args = '--threads 4'
        cpus = 4  // Keep this for resource allocation
        publishDir = [
            path: { "${params.outdir}/unmapped_bam" },
            mode: 'copy'
        ]
    }


    withName: 'MINIMAP2_ALIGN' {
        ext.args = { "-ax map-ont" }
        cpus = 8
        publishDir = [
            path: { "${params.outdir}/mapped_map" },
            mode: 'copy'
        ]
    }

    withName: 'NANOPLOT' {
        ext.args = '--alength -t 32 --huge'
        publishDir = [
            path: { "${params.outdir}/nanoplot_qc" },
            mode: 'copy'
        ]
        }

    withName: MOSDEPTH {
        ext.args = '--fast-mode --by 1000'
        publishDir = [
            path: { "${params.outdir}/mosdepth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MOSDEPTH_COV {
        ext.args = '-n --quantize 0:1:10:30:'
        publishDir = [
            path: { "${params.outdir}/mosdepth" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MODKIT_PILEUP' {
        // ext.args = '--threads 4'
        ext.prefix = { "${meta.id}_methyl" }
        publishDir = [
            path: { "${params.outdir}/methyl" },
            mode: 'copy'
        ]
        }

    withName: 'MODKIT_PILEUP_CPG' {
        ext.args = '--cpg'
        ext.prefix = { "${meta.id}_cpg.methyl" }
        publishDir = [
            path: { "${params.outdir}/methyl" },
            mode: 'copy'
        ]
        }

    withName: 'SVIM' {
        ext.prefix = { "${meta.id}_svim" }
        ext.args = [
            '--min_mapq 10',
            '--min_sv_size 30',
            '--types DEL,INS,INV,DUP:TANDEM,DUP:INT,BND'
            ].join(' ')
        publishDir = [
            path: { "${params.outdir}/svim" },
            mode: 'copy',
            pattern: '*.vcf'
        ]
    }

    withName: 'BCFTOOLS_SORT_SVIM' {
        ext.prefix = { "${meta.id}_svim_sorted" }
        ext.args = '-Ov'
        publishDir = [ 
            path: { "${params.outdir}/svim" },
            mode: 'copy'
        ]
    }

    withName: 'BGZIP_SVIM' {
        ext.prefix = { "${meta.id}_svim_sorted" }
        ext.args = '-c'
        publishDir = [
            path: { "${params.outdir}/svim" },
            mode: 'copy'
        ]
    }

    withName: 'CUTESV' {
    ext.prefix = { "${meta.id}_cutesv" }
    ext.args = '--min_support 2 --max_cluster_bias_INS 100 --diff_ratio_merging_INS 0.3 --max_cluster_bias_DEL 100 --diff_ratio_merging_DEL 0.3 --min_size 30 --genotype'
    publishDir = [
        path: { "${params.outdir}/cutesv" },
        mode: 'copy',
        pattern: '*.vcf'
    ]
    }

    withName: 'BCFTOOLS_SORT_CUTESV' {
    ext.prefix = { "${meta.id}_cutesv_sorted" }
    ext.args = '-Ov'
    publishDir = [ 
        path: { "${params.outdir}/cutesv" },
        mode: 'copy'
    ]
    }

    withName: 'BGZIP_CUTESV' {
    ext.prefix = { "${meta.id}_cutesv_sorted" }
    ext.args = '-c'
     publishDir = [
        path: { "${params.outdir}/cutesv" },
        mode: 'copy'
        ]
        }


    withName: 'SNIFFLES' {
        ext.prefix = { "${meta.id}_sniffles" }
        ext.args = '--allow-overwrite --minsvlen 30 --minsupport 2 --cluster-merge-bnd 2000 --qc-bnd-filter-strand False'
                publishDir = [
            path: { "${params.outdir}/sniffles" },
            mode: 'copy'
        ]
        
    }


    withName: 'SURVIVOR_MERGE' {
        cpus = 2
        memory = 4.GB
        publishDir = [
            path: { "${params.outdir}/consensusv_vcf" },
            mode: 'copy' 
            ]
    }

    withName: 'SURVIVOR_FIX' {
        ext.prefix = { "${meta.id}_fixed" }
        publishDir = [
            path: { "${params.outdir}/consensusv_vcf" },
            mode: 'copy'
        ]
    }

    withName: ' BCFTOOLS_SORT_SV' {
    ext.prefix = { "${meta.id}_sorted" }
    // ext.args = '-Ov'
     publishDir = [
        path: { "${params.outdir}/consensusv_vcf" },
        mode: 'copy'
        ]
        }

    // withName: 'BGZIP_SV' {
    // ext.prefix = { "${meta.id}" }
    // ext.args = '-c'
    //  publishDir = [
    //     path: { "${params.outdir}/consensusv_vcf" },
    //     mode: 'copy'
    //     ]
    //     }


    withName: 'FILTERCOV_SV_SNIFFLES' {
        ext.prefix = { "${meta.id}_sniffles" }
        publishDir = [
            path: { "${params.outdir}/filtered_sv_vcf" },
            mode: 'copy'
        ]
    }

    withName: 'FILTERCOV_SV_CUTESV' {
        ext.prefix = { "${meta.id}_cutesv" }
        publishDir = [
            path: { "${params.outdir}/filtered_sv_vcf" },
            mode: 'copy'
        ]
    }

    withName: 'FILTERCOV_SV_SVIM' {
        ext.prefix = { "${meta.id}_svim" }
        publishDir = [
            path: { "${params.outdir}/filtered_sv_vcf" },
            mode: 'copy'
        ]
    }

    withName: 'GUNZIP_SNIFFLES' {
        ext.prefix = { "${meta.id}_sniffles" }
    }
    
    withName: 'GUNZIP_CUTESV' {
        ext.prefix = { "${meta.id}_cutesv" }
    }
    
    withName: 'GUNZIP_SVIM' {
        ext.prefix = { "${meta.id}_svim" }
    }


    withName: 'SVANNA_PRIORITIZE' {
        ext.prefix = { "${meta.id}_svanna" }
        ext.output_format = params.output_format
        publishDir = [
            path: { "${params.outdir}/svanna" },
            mode: 'copy']}


    withName: 'CLAIR3' {
    ext.prefix = { "${meta.id}_clair3" }
    publishDir = [
        path: { "${params.outdir}/clair3" },
        mode: 'copy'
        // pattern: '*.{vcf,vcf.gz}'
    ]
    }

    withName: 'CLAIR3_FIX' {
    ext.prefix = { "${meta.id}_clair3_merge_fixed" }
    publishDir = [
        path: { "${params.outdir}/clair3" },
        mode: 'copy'
    ]
    }

     withName: 'BCFTOOLS_FILTER_CLAIR3' {
        ext.prefix = { "${meta.id}_clair3_merge_filtered" }
        ext.args = '--threads 4 -f PASS -Oz --write-index=tbi'
        publishDir = [
            path: { "${params.outdir}/clair3" },
            mode: 'copy'
        ]
    }


    withName: 'DEEPVARIANT_RUNDEEPVARIANT'{
        ext.prefix = { "${meta.id}_deepvariant" }
        ext.args = '--model_type=ONT_R104 --vcf_stats_report=true --disable_small_model=true --logging_dir=${PWD}/logs --dry_run=false --regions=chr22'
        publishDir = [
            path: { "${params.outdir}/deepvariant" },
            mode: 'copy',
            pattern: '*.{vcf,vcf.gz,vcf.gz.tbi,g.vcf.gz,g.vcf.gz.tbi}'
        ]
    }

    withName: 'BCFTOOLS_FILTER_DEEPVARIANT' {
        ext.prefix = { "${meta.id}_deepvariant_filtered" }
        ext.args = '--threads 4 -f PASS -Oz --write-index=tbi'
        publishDir = [
            path: { "${params.outdir}/deepvariant" },
            mode: 'copy'
        ]
    }

    withName: 'LONGPHASE_PHASE'{
        ext.prefix = { "${meta.id}_longphase" }
        ext.args = '--ont'
        publishDir = [
            path: { "${params.outdir}/longphase" },
            mode: 'copy'
        ]
    }


    withName: 'BCFTOOLS_CONCAT_SNV' {
        ext.prefix = { "${meta.id}_merged_SNV" }
        ext.args = '--rm-dups all --write-index=tbi --allow-overlaps --threads 4'
        publishDir = [
            path: { "${params.outdir}/merged_SNV" },
            mode: 'copy'
        ]
    }



    withName: QDNASEQ {
        ext.prefix = { "${meta.id}_qdnaseq" }
            publishDir = [
            path: { "${params.outdir}/qdnaseq" },
            mode: 'copy'
        ]
    }

    withName: 'SPECTRE' {
        // ext.args =  '--bin-size 1000'
        ext.prefix = { "${meta.id}_spectre" }
        publishDir = [
            path: { "${params.outdir}/spectre" },
            mode: 'copy'
        ]
    }

    withName: 'BCFTOOLS_SORT_SPECTRE' {
        ext.prefix = { "${meta.id}_spectre_sorted" }
        ext.args = '-Oz --write-index=tbi'
        publishDir = [ 
            path: { "${params.outdir}/spectre" },
            mode: 'copy'
        ]
    }

    
    withName: 'ROUND_DP' {
        ext.prefix = { "${meta.id}_rounddp_spectre" }
        ext.args = '--threads 4'
        publishDir = [
            path: { "${params.outdir}/spectre" },
            mode: 'copy'
        ]}

    withName: STRAGLR {
        ext.args = '--genotype_in_size'
        ext.prefix = { "${meta.id}_straglr" }
            publishDir = [
            path: { "${params.outdir}/straglr" },
            mode: 'copy'
        ]
    }

    withName: 'BCFTOOLS_SORT_STRAGLR' {
        ext.prefix = { "${meta.id}_straglr_sorted" }
        ext.args = '-Ov'
        publishDir = [ 
            path: { "${params.outdir}/straglr" },
            mode: 'copy'
        ]
    }

    withName: 'UNIFYVCF' {
        publishDir = [
            path: { "${params.outdir}/unified_SV_CNV_STR" },
            mode: 'copy'
        ]
    }

    // for scientists to view the unified VCF
    withName: 'GUNZIP_UNIFY' {
        ext.prefix = { "${meta.id}_unify" }
        ext.args = '-c'
        publishDir = [
            path: { "${params.outdir}/unified_SV_CNV_STR" },
            mode: 'copy'
        ]
    }


}