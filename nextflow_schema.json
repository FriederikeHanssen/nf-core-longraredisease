{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/nanoraredx/master/nextflow_schema.json",
    "title": "nf-core/nanoraredx pipeline parameters",
    "description": "A Nextflow pipeline for rare disease diagnostics from Oxford Nanopore long-read sequencing data. Includes SV, SNV, CNV, and methylation profiling.",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 6 columns, and a header row. See [usage docs](https://nf-co.re/nanoraredx/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "workflow_options": {
            "title": "Workflow options",
            "type": "object",
            "fa_icon": "fas fa-cogs",
            "description": "Options to configure the workflow execution mode.",
            "properties": {
                "align_with_fastq": {
                    "type": "boolean",
                    "default": false,
                    "description": "Align FASTQ files to reference genome using minimap2.",
                    "fa_icon": "fas fa-align-left",
                    "help_text": "Enable this option when you have raw FASTQ files that need to be aligned to a reference genome."
                },
                "align_with_bam": {
                    "type": "boolean",
                    "default": true,
                    "description": "Convert unaligned BAM files to FASTQ and align to reference genome.",
                    "fa_icon": "fas fa-file-archive",
                    "help_text": "Enable this option when you have unaligned BAM files that need to be converted to FASTQ and then aligned."
                },
                "sv": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable structural variant calling.",
                    "fa_icon": "fas fa-dna"
                },
                "snv": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable single nucleotide variant calling.",
                    "fa_icon": "fas fa-search"
                },
                "cnv": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable copy number variant calling.",
                    "fa_icon": "fas fa-chart-line"
                },
                "str": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable short tandem repeat analysis.",
                    "fa_icon": "fas fa-repeat"
                },
                "methyl": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable methylation calling.",
                    "fa_icon": "fas fa-flask"
                },
                "phase": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable phasing analysis.",
                    "fa_icon": "fas fa-link"
                },
                "qc": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable quality control analysis.",
                    "fa_icon": "fas fa-check-circle"
                },
                "generate_bam_stats": {
                    "type": "boolean",
                    "default": true,
                    "description": "Generate BAM statistics using samtools.",
                    "fa_icon": "fas fa-chart-bar"
                },
                "generate_coverage": {
                    "type": "boolean",
                    "default": true,
                    "description": "Generate coverage analysis.",
                    "fa_icon": "fas fa-layer-group"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "required": ["fasta_file"],
            "properties": {
                "fasta_file": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is mandatory. Path to the reference genome FASTA file.",
                    "fa_icon": "far fa-file-code"
                },
                "bed_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to BED file for coverage analysis (optional).",
                    "help_text": "Optional BED file for targeted coverage analysis with mosdepth.",
                    "fa_icon": "fas fa-bed"
                },
                "sniffles_tandem_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to tandem repeat BED file for Sniffles.",
                    "fa_icon": "fas fa-file"
                },
                "chromosome_codes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of chromosome codes to process.",
                    "fa_icon": "fas fa-list"
                }
            }
        },
        "sv_calling_options": {
            "title": "Structural Variant Calling",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Options for structural variant calling and filtering.",
            "properties": {
                "consensuSV": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable multi-caller SV filtering.",
                    "fa_icon": "fas fa-filter"
                },
                "use_survivor_bed": {
                    "type": "boolean",
                    "default": true,
                    "description": "Use SURVIVOR for BED output.",
                    "fa_icon": "fas fa-bed"
                },
                "max_distance_breakpoints": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Maximum distance between breakpoints for merging.",
                    "fa_icon": "fas fa-ruler"
                },
                "min_supporting_callers": {
                    "type": "integer",
                    "default": 2,
                    "description": "Minimum number of supporting callers.",
                    "fa_icon": "fas fa-users"
                },
                "account_for_type": {
                    "type": "integer",
                    "default": 1,
                    "description": "Account for SV type in merging.",
                    "fa_icon": "fas fa-cog"
                },
                "account_for_sv_strands": {
                    "type": "integer",
                    "default": 1,
                    "description": "Account for SV strands in merging.",
                    "fa_icon": "fas fa-cog"
                },
                "estimate_distanced_by_sv_size": {
                    "type": "integer",
                    "default": 1,
                    "description": "Estimate distance by SV size.",
                    "fa_icon": "fas fa-cog"
                },
                "min_sv_size": {
                    "type": "integer",
                    "default": 30,
                    "description": "Minimum SV size to consider.",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "refdist": {
                    "type": "integer",
                    "default": 500,
                    "description": "Reference distance for Truvari.",
                    "fa_icon": "fas fa-ruler"
                },
                "pctsim": {
                    "type": "number",
                    "default": 0.7,
                    "description": "Percent similarity for Truvari.",
                    "fa_icon": "fas fa-percentage"
                },
                "pctseq": {
                    "type": "number",
                    "default": 0.7,
                    "description": "Percent sequence similarity for Truvari.",
                    "fa_icon": "fas fa-percentage"
                },
                "passonly": {
                    "type": "boolean",
                    "default": true,
                    "description": "Only consider PASS variants.",
                    "fa_icon": "fas fa-check"
                },
                "dup_to_ins": {
                    "type": "boolean",
                    "default": false,
                    "description": "Convert duplications to insertions.",
                    "fa_icon": "fas fa-exchange-alt"
                },
                "primary_sv_caller": {
                    "type": "string",
                    "default": "sniffles",
                    "enum": ["sniffles", "cutesv", "svim"],
                    "description": "Primary SV caller to use if no consensuSV.",
                    "fa_icon": "fas fa-tools"
                },
                "filter_sv": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable SV filtering by coverage.",
                    "fa_icon": "fas fa-filter"
                },
                "filter_pass_sv": {
                    "type": "boolean",
                    "default": true,
                    "description": "Filter PASS variants only in SV.",
                    "fa_icon": "fas fa-check-circle"
                },
                "min_read_support": {
                    "type": "string",
                    "default": "auto",
                    "description": "Minimum read support for SVs.",
                    "fa_icon": "fas fa-support"
                },
                "min_read_support_limit": {
                    "type": "integer",
                    "default": 2,
                    "description": "Minimum read support limit.",
                    "fa_icon": "fas fa-limit"
                }
            }
        },
        "sv_annotation_options": {
            "title": "SV Annotation",
            "type": "object",
            "fa_icon": "fas fa-tags",
            "description": "Options for SV annotation with SvAnna.",
            "properties": {
                "svanna_db": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the SvAnna database directory.",
                    "fa_icon": "fas fa-database"
                },
                "output_format": {
                    "type": "string",
                    "default": "html",
                    "enum": ["html", "tsv"],
                    "description": "Output format for SvAnna results.",
                    "fa_icon": "fas fa-file-code"
                }
            }
        },
        "snv_calling_options": {
            "title": "SNV Calling",
            "type": "object",
            "fa_icon": "fas fa-search",
            "description": "Options for single nucleotide variant calling.",
            "properties": {
                "deepvariant": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable DeepVariant calling.",
                    "fa_icon": "fas fa-brain"
                },
                "merge_snv": {
                    "type": "boolean",
                    "default": false,
                    "description": "Merge SNV calls from multiple callers.",
                    "fa_icon": "fas fa-compress-arrows-alt"
                },
                "filter_pass_snv": {
                    "type": "boolean",
                    "default": false,
                    "description": "Filter PASS variants only in SNV.",
                    "fa_icon": "fas fa-check-circle"
                },
                "clair3_model": {
                    "type": "string",
                    "default": "ont",
                    "description": "Clair3 model to use.",
                    "fa_icon": "fas fa-brain"
                },
                "clair3_platform": {
                    "type": "string",
                    "default": "ont",
                    "description": "Clair3 platform.",
                    "fa_icon": "fas fa-microchip"
                }
            }
        },
        "phasing_options": {
            "title": "Phasing Options",
            "type": "object",
            "fa_icon": "fas fa-link",
            "description": "Options for phasing analysis.",
            "properties": {
                "phase_with_sv": {
                    "type": "boolean",
                    "default": true,
                    "description": "Include SVs in phasing analysis.",
                    "fa_icon": "fas fa-dna"
                }
            }
        },
        "cnv_calling_options": {
            "title": "CNV Calling",
            "type": "object",
            "fa_icon": "fas fa-chart-line",
            "description": "Options for copy number variant calling.",
            "properties": {
                "run_qdnaseq": {
                    "type": "boolean",
                    "default": false,
                    "description": "Run QDNAseq for CNV calling.",
                    "fa_icon": "fas fa-chart-area"
                },
                "genome_build": {
                    "type": "string",
                    "default": "hg38",
                    "enum": ["hg19", "hg38"],
                    "description": "Genome build for CNV calling.",
                    "fa_icon": "fas fa-dna"
                },
                "qdnaseq_bin_size": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Bin size for QDNAseq.",
                    "fa_icon": "fas fa-th"
                },
                "method": {
                    "type": "string",
                    "default": "cutoff",
                    "description": "Method for CNV calling.",
                    "fa_icon": "fas fa-cut"
                },
                "cutoff": {
                    "type": "number",
                    "default": 0.5,
                    "description": "General cutoff value.",
                    "fa_icon": "fas fa-cut"
                },
                "cutoff_del": {
                    "type": "number",
                    "default": 0.5,
                    "description": "Cutoff for deletions.",
                    "fa_icon": "fas fa-minus"
                },
                "cutoff_loss": {
                    "type": "number",
                    "default": 1.5,
                    "description": "Cutoff for losses.",
                    "fa_icon": "fas fa-arrow-down"
                },
                "cutoff_gain": {
                    "type": "number",
                    "default": 2.5,
                    "description": "Cutoff for gains.",
                    "fa_icon": "fas fa-arrow-up"
                },
                "cellularity": {
                    "type": "number",
                    "default": 1,
                    "description": "Sample cellularity.",
                    "fa_icon": "fas fa-cell"
                },
                "use_test_data": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use test data for Spectre CNV calling.",
                    "fa_icon": "fas fa-vial"
                },
                "spectre_metadata": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to Spectre metadata file.",
                    "fa_icon": "fas fa-file-alt"
                },
                "spectre_blacklist": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to Spectre blacklist BED file.",
                    "fa_icon": "fas fa-ban"
                },
                "spectre_test_mosdepth": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to test mosdepth file for Spectre CNV calling.",
                    "fa_icon": "fas fa-vial",
                    "hidden": true
                },
                "spectre_test_fasta_file": {
                    "type": "string", 
                    "format": "file-path",
                    "description": "Path to test FASTA file for Spectre CNV calling.",
                    "fa_icon": "fas fa-vial",
                    "hidden": true
                },
                "spectre_test_clair3_vcf": {
                    "type": "string",
                    "format": "file-path", 
                    "description": "Path to test Clair3 VCF for Spectre CNV calling.",
                    "fa_icon": "fas fa-vial",
                    "hidden": true
                }
            }
        },
        "str_analysis_options": {
            "title": "STR Analysis",
            "type": "object",
            "fa_icon": "fas fa-repeat",
            "description": "Options for short tandem repeat analysis.",
            "properties": {
                "str_bed_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to STR BED file.",
                    "fa_icon": "fas fa-bed"
                }
            }
        },
        "vcf_unification_options": {
            "title": "VCF Unification",
            "type": "object",
            "fa_icon": "fas fa-compress-arrows-alt",
            "description": "Options for VCF unification.",
            "properties": {
                "unify_geneyx": {
                    "type": "boolean",
                    "default": true,
                    "description": "Enable VCF unification.",
                    "fa_icon": "fas fa-compress-arrows-alt"
                },
                "modify_str_calls": {
                    "type": "boolean",
                    "default": true,
                    "description": "Modify STR calls during unification.",
                    "fa_icon": "fas fa-edit"
                }
            }
        },
        "output_options": {
            "title": "Output Options",
            "type": "object",
            "fa_icon": "fas fa-file-export",
            "description": "Options for output formats.",
            "properties": {
                "vcf_output": {
                    "type": "boolean",
                    "default": true,
                    "description": "Generate VCF output.",
                    "fa_icon": "fas fa-file-code"
                },
                "snf_output": {
                    "type": "boolean",
                    "default": true,
                    "description": "Generate SNF output.",
                    "fa_icon": "fas fa-file-alt"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                },
                "help_full": {
                    "type": "boolean",
                    "description": "Show full help message.",
                    "hidden": true,
                    "fa_icon": "fas fa-question-circle"
                },
                "show_hidden": {
                    "type": "boolean",
                    "description": "Show hidden parameters.",
                    "hidden": true,
                    "fa_icon": "fas fa-eye-slash"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/workflow_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/sv_calling_options"
        },
        {
            "$ref": "#/$defs/sv_annotation_options"
        },
        {
            "$ref": "#/$defs/snv_calling_options"
        },
        {
            "$ref": "#/$defs/phasing_options"
        },
        {
            "$ref": "#/$defs/cnv_calling_options"
        },
        {
            "$ref": "#/$defs/str_analysis_options"
        },
        {
            "$ref": "#/$defs/vcf_unification_options"
        },
        {
            "$ref": "#/$defs/output_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}