// Global default params, used in configs

params {
    // bam_file      = null              // path to your BAM file
    fasta_file    = null               // path to your reference FASTA
    fai_file      = null               // path to your reference FASTA index
    // fasta_mm_file = null         // path to your reference FASTA with methylation tags
    tandem_file   = null      // path to tandem repeats BED file
    bam_dir       = null 
    bed_file      = null
    
    // SV filtering parameters
    filter_sv_calls = false
    min_read_support = 'auto'
    min_read_support_limit = 2
    chromosome_codes = '1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,X,Y,MT'

    
    // SURVIVOR merge parameters
    merge_sv_calls           = false
    max_distance_breakpoints = null        // Max distance between breakpoints (bp)
    min_supporting_callers   = null          // Minimum callers supporting an SV
    account_for_type         = null                 // Account for SV type (1=yes, 0=no)
    account_for_sv_strands   = null            // Account for SV strands (1=yes, 0=no)
    estimate_distanced_by_sv_size = null      // Estimate distance by SV size (1=yes, 0=no)
    min_sv_size = null

    // CLAIR3 configuration
    clair3_model = null
    clair3_platform = null

    // Spectre parameters
    spectre_metadata = null //optional metadata file for spectre
    spectre_blacklist = null
    spectre_fasta_file = null
    spectre_mosdepth = null
    spectre_bin_size = null //must be the same as mosdepth bin size, please see module config
    spectre_snv_vcf = null

    // Qdna seq parameters
    use_qdnaseq          = false
    genome_build         = null
    qdnaseq_bin_size     = null
    method               = null
    cutoff               = null
    cutoff_del           = null
    cutoff_loss          = null
    cutoff_gain          = null
    cellularity          = null

    // Str bed file
    str_bed_file         = null
    str_bam              = null

    // Deepvariant parameters

    use_deepvariant     = false

    

    // feature flags
    phase     = false
    phase_with_sv = false
    phase_sv_caller = null // options are sniffles cutesv svim. Only set if merged sv is not run
    cnv       = false
    str       = false


    // Output options 
    vcf_output   = true                            
    snf_output   = true

    // Boilerplate options
    outdir                       = null
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true                      
}
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
    test      { includeConfig 'conf/test.config'      }
    test_full { includeConfig 'conf/test_full.config' }
}

// Load base.config by default for all pipelines

cleanup  = false

// Load nf-core/nanoraredx custom profiles from different institutions.
// TODO nf-core: Optionally, you can add a pipeline-specific nf-core config at https://github.com/nf-core/configs
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/nanoraredx.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/nanoraredx'
    author          = """Nour Mahfel""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        // TODO nf-core: Update the field with the details of the contributors to your pipeline. New with Nextflow version 24.10.0
        [
            name: 'Nour Mahfel',
            affiliation: '',
            email: 'nour.mahfel1@nhs.net',
            github: '',
            contribution: [], // List of contribution types ('author', 'maintainer' or 'contributor')
            orcid: ''
        ],
    ]
    homePage        = 'https://github.com/nf-core/nanoraredx'
    description     = """A Nextflow pipeline for rare disease diagnostics from Oxford Nanopore long-read sequencing data. Includes SV, SNV, CNV, and methylation profiling."""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.04.2'
    version         = '1.0.0dev'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}


// validation {
//     defaultIgnoreParams = ["genomes"]
//     monochromeLogs = params.monochrome_logs
//     help {
//         enabled = true
//         command = "nextflow run nf-core/nanoraredx -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
//         fullParameter = "help_full"
//         showHiddenParameter = "show_hidden"
//         beforeText = """
// -\033[2m----------------------------------------------------\033[0m-
//                                         \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
// \033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
// \033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
// \033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
//                                         \033[0;32m`._,._,\'\033[0m
// \033[0;35m  nf-core/nanoraredx ${manifest.version}\033[0m
// -\033[2m----------------------------------------------------\033[0m-
// """
//         afterText = """${manifest.doi ? "\n* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "    https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
// * The nf-core framework
//     https://doi.org/10.1038/s41587-020-0439-x

// * Software dependencies
//     https://github.com/nf-core/nanoraredx/blob/master/CITATIONS.md
// """
//     }
//     summary {
//         beforeText = validation.help.beforeText
//         afterText = validation.help.afterText
//     }
// }

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
